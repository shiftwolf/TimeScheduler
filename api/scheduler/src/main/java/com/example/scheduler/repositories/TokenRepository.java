package com.example.scheduler.repositories;

import com.example.scheduler.entities.TokensEntity;
import org.springframework.data.repository.CrudRepository;
import org.springframework.data.jpa.repository.*;
import org.springframework.data.repository.query.Param;

import java.util.Optional;

/**
 * Special Interface for a CrudRepository that works on token entities
 * Note: Implementations for this interface are automatically
 * generated by the Spring Framework. @Annotations should be used
 * for changing the implementation.
 */
public interface TokenRepository extends CrudRepository<TokensEntity, String> {
    /**
     * @param token authentication string
     * @param userId Id of the User tied to the token
     *  Query checks if the client uses a valid token
     */
    @Query("SELECT CASE WHEN count(e) > 0 THEN true ELSE false END FROM TokensEntity e WHERE e.token = :token and e.userId = :userId" )
    Boolean isValid(@Param("token") String token, @Param("userId") Long userId);
    Optional<TokensEntity> findByToken(String token);

}
